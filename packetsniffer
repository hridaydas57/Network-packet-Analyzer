from scapy.all import sniff, IP, UDP

def packet_callback(packet):
    if packet.haslayer(IP):
        src = packet[IP].src
        dst = packet[IP].dst
        proto = packet.proto

        print(f"Source IP: {src}")
        print(f"Destination IP: {dst}")
        print(f"Protocol: {'UDP' if proto == 17 else 'Other'}")

        if packet.haslayer(UDP) and hasattr(packet[UDP], 'payload'):
            try:
                # Try to decode payload as UTF-8, ignore errors
                payload = bytes(packet[UDP].payload).decode('utf-8', errors='ignore')
                print(f"Payload: {payload}")
            except:
                print("Payload: <unable to decode>")
        print("-" * 60)

sniff(prn=packet_callback, filter="udp", count=0)
